<!--
  Run this example as follows:
  uv run collagraph examples/pyside/cgx_component_example.cgx
 -->
<qmainwindow window_title="JSX-like syntax example">
  <qwidget :layout="top_to_bottom">
    <qlabel v-bind:text="props.get('title')" />
    <qlabel v-if="state.get('content')" :text="content" />
    <qlabel v-else-if="state.get('other_content')" :text="other_content" />
    <qlabel v-else text="Nothing to see here" />
    <qwidget :layout="left_to_right">
      <qcheckbox v-on:state_changed="check_action" text="Click it" />
      <qlabel v-if="not clicked" text="You know you want it!" />
      <qlabel v-else text="You did it!" />
    </qwidget>
    <qpushbutton text="Push me" @clicked="click_action" />
  </qwidget>
</qmainwindow>

<script lang="python">
from collagraph import Component


class Example(Component):
    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
        self.state["top_to_bottom"] = {
            "type": "box",
            "direction": "TopToBottom",
        }
        self.state["left_to_right"] = {
            "type": "box",
            "direction": "LeftToRight",
        }
        self.state["clicked"] = False
        print("created")

    def mounted(self):
        print("mounted")

    def check_action(self, state):
        print("checked box", state)
        self.state["clicked"] = state

    def click_action(self, *args):
        print("clicked button", args)
        if "other_content" not in self.state:
            self.state["other_content"] = "Something to see here"
        elif "content" not in self.state:
            self.state["content"] = "Definitely something to see here!"
</script>
